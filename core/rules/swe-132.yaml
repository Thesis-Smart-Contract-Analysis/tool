rules:
  - id: swe-132
    patterns:
      - metavariable-regex:
          metavariable: $THIS
          regex: (this|address\(this\))
      - pattern-either:
          # Use balance directly
          - pattern: |
              if (<... $THIS.balance ...>) {
                ...
              }
          - pattern: |
              require(<... $THIS.balance ...>, "...");
          - pattern: |
              assert(<... $THIS.balance ...>, "...");
          - pattern: |
              return <... $THIS.balance ...>;
          # Use balance through derived variable
          - patterns:
              - pattern-inside: |
                  function $F(...) {
                    ...
                    $DERIVED = <... $THIS.balance ...>;
                    ...
                  }
              - pattern: |
                  if(<... $DERIVED ...>) {
                    ...
                  }
              - focus-metavariable: $DERIVED
          - patterns:
              - pattern-inside: |
                  function $F(...) {
                    ...
                    $DERIVED = <... $THIS.balance ...>;
                    ...
                  }
              - pattern: |
                  require(<... $DERIVED ...>, "...");
              - focus-metavariable: $DERIVED
          - patterns:
              - pattern-inside: |
                  function $F(...) {
                    ...
                    $DERIVED = <... $THIS.balance ...>;
                    ...
                  }
              - pattern: |
                  assert(<... $DERIVED ...>, "...");
              - focus-metavariable: $DERIVED
          - patterns:
              - pattern-inside: |
                  function $F(...) {
                    ...
                    $DERIVED = <... $THIS.balance ...>;
                    ...
                  }
              - pattern: |
                  return <... $DERIVED ...>;
              - focus-metavariable: $DERIVED
    message: Be careful when using `address($THIS).balance` to check balance of the smart contract.
    languages:
      - solidity
    severity: LOW
    metadata:
      category: security
      references:
        - https://swcregistry.io/docs/SWC-132/
        - https://cwe.mitre.org/data/definitions/667.html
      cwe: 'CWE-667: Improper Locking'
      name: unexpected-ether-balance