rules:
  - id: swe-101
    pattern-either:
      - patterns:
          - pattern: $X + $Y
          - pattern-not-inside: |
              function $F(...) {
                ...
                require($Z >= $X);
              }
      - pattern: $X += $Y
      - patterns:
          - pattern: $X - $Y
          - pattern-not-inside: |
              function $F(...) {
                require ($Y <= $X);
                ...
              }
          - pattern-not-inside: |
              function $F(...) {
                require ($X >= $Y);
                ...
              }
      - patterns:
          - pattern: $X -= $Y
          - pattern-not-inside: |
              function $F(...) {
                require ($Y <= $X);
                ...
              }
          - pattern-not-inside: |
              function $F(...) {
                require ($X >= $Y);
                ...
              }
      - patterns:
          - pattern: $X * $Y
          - pattern-not-inside: |
              function $F(...) {
                ...
                require(<... $Z / $X == $Y ...>);
              }
      - pattern: $X *= $Y
      # - pattern: $X / $Y
      # - pattern: $X /= $Y
      - pattern: $X % $Y
      - pattern: $X %= $Y
      - pattern: $X ** $Y
      - patterns:
          - pattern-either:
              - pattern: $X++
              - pattern: ++$X
              - pattern: $X--
              - pattern: --$X
          - pattern-not-inside: |
              for(...) {
                ...
              }
    message: The operation on variable `$X` could lead to overflow/underflow.
    languages:
      - solidity
    severity: HIGH
    metadata:
      references:
        - https://swcregistry.io/docs/SWC-101/
        - https://docs.soliditylang.org/en/latest/types.html
        - https://ethereum.stackexchange.com/questions/96482/can-division-underflow-or-overflow-in-solidity
      cwe: "CWE-682: Incorrect Calculation"
      name: integer-overflow-underflow
